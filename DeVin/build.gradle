plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	// QueryDSL
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'UMC'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// h2 database
	runtimeOnly 'com.h2database:h2'
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'

	// MySQL driver
	runtimeOnly 'mysql:mysql-connector-java'

	// Spring Boot test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.0.0"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0"

	// ps6py
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

	// JSON-Simple
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	// File Handling
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'commons-io', name: 'commons-io', version: '1.1'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// OAuth 2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}



tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝